[{"F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\index.js":"1","F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\reportWebVitals.js":"2","F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\App.js":"3","F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Login\\index.js":"4","F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Homepage\\index.js":"5","F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Register\\index.js":"6","F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\components\\Navigation\\index.js":"7","F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Dashboard\\index.js":"8","F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Groups\\index.js":"9","F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Food\\index.js":"10","F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Achievements\\index.js":"11","F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Profile\\index.js":"12","F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Friends\\index.js":"13","F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\components\\FoodItem\\index.js":"14","F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\components\\Friend\\index.js":"15"},{"size":558,"mtime":1642356363335,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1642356363353,"results":"18","hashOfConfig":"17"},{"size":345,"mtime":1642356363274,"results":"19","hashOfConfig":"17"},{"size":6356,"mtime":1642356363347,"results":"20","hashOfConfig":"17"},{"size":1511,"mtime":1642360762862,"results":"21","hashOfConfig":"17"},{"size":9969,"mtime":1642356363351,"results":"22","hashOfConfig":"17"},{"size":7823,"mtime":1642356363288,"results":"23","hashOfConfig":"17"},{"size":5459,"mtime":1642356363338,"results":"24","hashOfConfig":"17"},{"size":13567,"mtime":1642356363343,"results":"25","hashOfConfig":"17"},{"size":17576,"mtime":1642356363340,"results":"26","hashOfConfig":"17"},{"size":293,"mtime":1642356363337,"results":"27","hashOfConfig":"17"},{"size":11933,"mtime":1642356363350,"results":"28","hashOfConfig":"17"},{"size":8156,"mtime":1642356363341,"results":"29","hashOfConfig":"17"},{"size":10290,"mtime":1642356363278,"results":"30","hashOfConfig":"17"},{"size":3304,"mtime":1642356363285,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qfhpyf",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\index.js",[],"F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\reportWebVitals.js",[],"F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\App.js",[],"F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Login\\index.js",[],"F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Homepage\\index.js",[],"F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Register\\index.js",["66","67"],"import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {useHistory, withRouter} from \"react-router-dom\";\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    formControl: {\r\n\r\n        minWidth: '100%',\r\n    },\r\n}));\r\n\r\nconst Register = () => {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [type, setType] = useState('');\r\n\r\n    const [open, setOpen] = useState(false);\r\n    toast.configure();\r\n\r\n    const data = {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        email: email,\r\n        password: password,\r\n        address: address,\r\n        type: type,\r\n    }\r\n\r\n    let Toast = (props) => {\r\n        const {severity, message} = props;\r\n        return (\r\n            <Alert severity={severity} onClose={() => setOpen(false)}>{message}</Alert>\r\n        )\r\n    }\r\n    const handleChange = (event) => {\r\n        setType(event.target.value);\r\n    };\r\n\r\n\r\n    const handleRegisterData = () => {\r\n        axios.post('http://localhost:8080/api/register', data, {withCredentials:true})\r\n            .then(() => {\r\n                console.log('Data send successfully', data);\r\n                history.push('/');\r\n                setOpen(true);\r\n                // setToastr (<Toast severity={'success'} message={\"Register successfully\"}/>);\r\n            })\r\n            .catch((error) => {\r\n                const values = error.response.data;\r\n                console.log('Values:', values);\r\n                Object.values(values).map((value) => {\r\n                    toast.error(value, {\r\n                        position: \"top-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: false,\r\n                        draggable: false,\r\n                        progress: undefined,\r\n                    });\r\n\r\n                })\r\n\r\n            })\r\n    }\r\n    return (\r\n        <div className={'waste-app-body'}>\r\n            <Container component=\"main\" maxWidth=\"xs\" className={'waste-app-register-container'}>\r\n                <CssBaseline/>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon/>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Register\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    autoComplete=\"fname\"\r\n                                    name=\"firstName\"\r\n                                    variant=\"outlined\"\r\n                                    value={firstName}\r\n                                    onChange={(event) => setFirstName(event.target.value)}\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"firstName\"\r\n                                    label=\"First Name\"\r\n                                    autoFocus\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    value={lastName}\r\n                                    onChange={(event => setLastName(event.target.value))}\r\n                                    id=\"lastName\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastName\"\r\n                                    autoComplete=\"lname\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    value={email}\r\n                                    onChange={(event => setEmail(event.target.value))}\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    value={password}\r\n                                    onChange={(event => setPassword(event.target.value))}\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    value={address}\r\n                                    onChange={(event => setAddress(event.target.value))}\r\n                                    name=\"adress\"\r\n                                    label=\"Adress\"\r\n                                    id=\"adress\"\r\n                                    autoComplete=\"adress\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                    <InputLabel id=\"demo-simple-select-outlined-label\">Type</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        id=\"demo-simple-select-outlined\"\r\n                                        value={type}\r\n                                        onChange={handleChange}\r\n                                        label=\"Type\"\r\n                                    >\r\n                                        <MenuItem value=\"\">\r\n                                            <em>None</em>\r\n                                        </MenuItem>\r\n                                        <MenuItem value={'Mixed'}>Mixed</MenuItem>\r\n                                        <MenuItem value={'Vegetarian'}>Vegetarian</MenuItem>\r\n                                        <MenuItem value={'Vegan'}>Vegan</MenuItem>\r\n                                        <MenuItem value={'Carnivor'}>Carnivor</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Button\r\n\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={handleRegisterData}\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link href=\"#\" variant=\"body2\" onClick={() => history.push('/login')}>\r\n                                    Already have an account? Sign in\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n\r\n            </Container>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(Register);","F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\components\\Navigation\\index.js",["68"],"/**\r\n *\r\n * Navigation\r\n *\r\n */\r\n\r\nimport React, {useState} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport clsx from 'clsx';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents';\r\nimport KitchenIcon from '@material-ui/icons/Kitchen';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {toast} from 'react-toastify';\r\nimport {useHistory, withRouter} from \"react-router-dom\";\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport './style.scss'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    logoutButton: {\r\n        marginRight: '10px',\r\n    },\r\n});\r\n\r\nconst Navigation = ({children}) => {\r\n    toast.configure();\r\n    const history = useHistory();\r\n\r\n\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        left: false,\r\n    });\r\n    const [auth, setAUth] = useState(true);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const logout = () => {\r\n    };\r\n    const handleClose = () => {\r\n    };\r\n\r\n    const toggleDrawer = (anchor, open) => event => {\r\n        if (\r\n            event.type === 'keydown' &&\r\n            (event.key === 'Tab' || event.key === 'Shift')\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setState({...state, [anchor]: open});\r\n    };\r\n\r\n    const drawerOptions = [\r\n        {\r\n            text: 'My food',\r\n            link: '/food',\r\n        },\r\n        {\r\n            text: 'My groups',\r\n            link: '/groups',\r\n        },\r\n        {\r\n            text: 'Friends',\r\n            link: '/friends',\r\n        },\r\n    ];\r\n\r\n    const drawerGeneralOptions = [\r\n        {\r\n            text: 'Team',\r\n            link: '/team',\r\n        },\r\n        {\r\n            text: 'Activities',\r\n            link: '/activities',\r\n        },\r\n        {\r\n            text: 'Dashboard',\r\n            link: '/dashboard',\r\n        },\r\n        {\r\n            text: 'Friends',\r\n            link: '/friends',\r\n        },\r\n    ];\r\n\r\n    const list = anchor => (\r\n        <div\r\n            className={clsx(classes.list, {\r\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n            })}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <Grid container direction=\"column\">\r\n                <Grid item xs={12}>\r\n                    <List>\r\n                        <ListItem button component={Link} to={'/profile'}>\r\n                            <ListItemIcon>\r\n                                <AccountCircleIcon/>\r\n                            </ListItemIcon>\r\n                            <ListItemText>Profile</ListItemText>\r\n                        </ListItem>\r\n\r\n                    <Divider/>\r\n                    </List>\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <List>\r\n                        <ListItem button component={Link} to={'/'}>\r\n                            <ListItemIcon>\r\n                                <FastfoodIcon/>\r\n                            </ListItemIcon>\r\n                            <ListItemText>All food</ListItemText>\r\n                        </ListItem>\r\n                        {drawerOptions.map((value, index) => (\r\n                            <ListItem\r\n                                button\r\n                                key={value.text}\r\n                                component={Link}\r\n                                to={value.link}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    {/* eslint-disable-next-line no-nested-ternary */}\r\n                                    {index % 4 === 0 ? (\r\n                                        <KitchenIcon/>\r\n                                    ) : index % 4 === 1 ? (\r\n                                        <GroupIcon/>\r\n                                    ) :  (<GroupIcon/>) }\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={value.text}/>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    <Divider/>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n\r\n    const handleLogout = () => {\r\n        axios.delete(`http://localhost:8080/api/logout`, {withCredentials: true})\r\n            .then(() => {\r\n                console.log('Logout!');\r\n                toast.success(`Logged out successfully`, {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    progress: undefined,\r\n                });\r\n                document.cookie=\"cookieLogin=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n                history.push('/login');\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n\r\n            })\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\" className={classes.root}>\r\n                <Grid container justify=\"space-between\">\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            aria-label=\"menu\"\r\n                            color=\"inherit\"\r\n                            onClick={toggleDrawer('left', true)}\r\n                        >\r\n                            <MenuIcon/>\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\"><Link to={\"/\"} className={'app-title'} >Food waste app</Link></Typography>\r\n\r\n                        <Drawer\r\n                            anchor=\"left\"\r\n                            open={state.left}\r\n                            onClose={toggleDrawer('left', false)}\r\n                            className=\"drawer-container\"\r\n                        >\r\n                            {list('left')}\r\n                        </Drawer>\r\n                    </Toolbar>\r\n                    {auth && (\r\n                        <>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleLogout}\r\n                                color=\"inherit\"\r\n                                className={classes.logoutButton}\r\n                            >\r\n                                <ExitToAppIcon/>\r\n                            </IconButton>\r\n                        </>\r\n                    )}\r\n                </Grid>\r\n            </AppBar>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Navigation;\r\n","F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Dashboard\\index.js",[],"F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Groups\\index.js",[],"F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Food\\index.js",[],"F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Achievements\\index.js",[],"F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Profile\\index.js",[],"F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\pages\\Friends\\index.js",[],"F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\components\\FoodItem\\index.js",["69","70","71","72","73","74","75","76","77","78","79","80"],"import React, {useState} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {red} from '@material-ui/core/colors';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport {FacebookIcon, FacebookShareButton, TwitterIcon, TwitterShareButton} from 'react-share';\r\nimport axios from 'axios';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './style.scss';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nconst FoodItem = (props) => {\r\n    const classes = useStyles();\r\n    const {\r\n        name,\r\n        expireDate,\r\n        brand,\r\n        price,\r\n        count,\r\n        address,\r\n        id,\r\n        objectUserId,\r\n        unclaim,\r\n        status,\r\n        expireSoon\r\n    } = props;\r\n    const [isOpened, setIsOpened] = useState(false);\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    const shareUrl = `http://food-waste.com/${id}`;\r\n    // console.log('User id:',userId,'id:',id);\r\n    const postTitle = `Hi everyone! I have some spare ${name} that I want to share with you!`\r\n    toast.configure();\r\n    const handleClaim = () => {\r\n        axios.put(`http://localhost:8080/api/claimProduct/${objectUserId}/${id}`, {\r\n            userId: userId,\r\n            id: id\r\n        }, {withCredentials: true})\r\n            .then(() => {\r\n                toast.success(`Product ${name} claimed succesfully`, {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    progress: undefined,\r\n                });\r\n                console.log('Product claimed successfully')\r\n            })\r\n            .catch((error) => {\r\n                console.log('User id:', userId, 'id:', id);\r\n                console.log('Error:', error.response.data.message);\r\n                toast.error(error.response.data.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    progress: undefined,\r\n                });\r\n            })\r\n    };\r\n\r\n    const handleUnclaim = () => {\r\n        console.log('Unhandle Claim datA:', userId, id);\r\n        axios.put(`http://localhost:8080/api/unclaimProduct/${objectUserId}/${id}`, {\r\n            userId: objectUserId,\r\n            id: id\r\n        }, {withCredentials: true})\r\n            .then(() => {\r\n                toast.success(`Product ${name} unclaimed succesfully`, {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    progress: undefined,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log('User id:', userId, 'id:', id);\r\n                console.log('Error:', error.response.data.message);\r\n                toast.error(error.response.data.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    progress: undefined,\r\n                });\r\n            })\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        axios.delete(`http://localhost:8080/api/deleteProduct/${id}`, {withCredentials: true})\r\n            .then(() => {\r\n                toast.success(`Product ${name} deleted succesfully`, {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    progress: undefined,\r\n                });\r\n                console.log('Product claimed successfully')\r\n            })\r\n            .catch((error) => {\r\n                console.log('User id:', userId, 'id:', id);\r\n                console.log('Error:', error.response.data.message);\r\n                toast.error(error.response.data.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    progress: undefined,\r\n                });\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                        {name.charAt(0)}\r\n                        {/*{name}*/}\r\n                    </Avatar>\r\n                }\r\n                action={\r\n                    <IconButton aria-label=\"settings\">\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                }\r\n                title={name}\r\n                subheader={expireDate}\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Brand: {brand}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Price: {price}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Count: {count}\r\n                </Typography>\r\n                {address && (\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        Address: {address}\r\n                    </Typography>\r\n                )}\r\n\r\n                {(status !== 'available' && status) ? (\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        Claimed by {status}\r\n                    </Typography>\r\n                ) : null}\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                <Tooltip title={\"Claim this product\"}>\r\n                    <IconButton aria-label=\"add to favorites\">\r\n                        <DoneIcon onClick={handleClaim}/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title={\"Share this product\"}>\r\n                    <IconButton aria-label=\"share\">\r\n                        <ShareIcon onClick={() => setIsOpened(!isOpened)}/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n\r\n\r\n                {isOpened && (\r\n                    <>\r\n                        <IconButton>\r\n                            <FacebookShareButton\r\n                                url={shareUrl}\r\n                                quote={postTitle}\r\n                                className=\"Demo__some-network__share-button\"\r\n                            >\r\n                                <FacebookIcon size={32} round/>\r\n                            </FacebookShareButton>\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <TwitterShareButton\r\n                                url={shareUrl}\r\n                                title={postTitle}\r\n                                className=\"Demo__some-network__share-button\"\r\n                            >\r\n                                <TwitterIcon size={32} round/>\r\n                            </TwitterShareButton>\r\n                        </IconButton>\r\n\r\n                    </>\r\n                )}\r\n\r\n                {\r\n                    unclaim === 1 ? (\r\n                            <Tooltip title={\"Unclaim this product\"}>\r\n                                <IconButton aria-label={\"unclaim product\"}>\r\n                                    <RemoveCircleIcon onClick={handleUnclaim}/>\r\n                                </IconButton>\r\n                            </Tooltip>)\r\n                        : unclaim === 2 ?\r\n                        (\r\n                            <Tooltip title={\"Delete this product\"}>\r\n                                <IconButton aria-label={\"delete product\"}>\r\n                                    <DeleteIcon onClick={handleDelete}/>\r\n                                </IconButton>\r\n                            </Tooltip>) :\r\n                        <></>\r\n                }\r\n                {expireSoon && (\r\n                    <Tooltip title={\"This item expires soon!\"}>\r\n                        <IconButton color={\"#FF0000\"} aria-label={\"unclaim product\"}>\r\n                            <ErrorIcon style={{color: red[500]}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n\r\n                )}\r\n            </CardActions>\r\n\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\nexport default FoodItem;","F:\\ASE\\FACULTATE\\AN III\\SEM I\\TEHNOLOGII WEB\\Web-tech-project\\front-end\\waste-app\\src\\components\\Friend\\index.js",["81","82","83","84","85","86"],"import React, {useState} from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport './style.scss';\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport axios from 'axios';\r\nimport {toast} from 'react-toastify';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        // minWidth: 275,\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\nconst Friend = (props) => {\r\n    toast.configure();\r\n    const {id,name,initial, checkbox,sendData, avatarId}=props;\r\n    const classes = useStyles();\r\n    const [checked,setChecked]=useState(false);\r\n\r\n    // useEffect(() => {\r\n    //     console.log('ID :',id)\r\n    //     sendData(id);\r\n    // })\r\n\r\n    const handleCheckbox = () => {\r\n        sendData(id);\r\n    }\r\n\r\n    const handleAddFriend = () => {\r\n        axios.post(`http://localhost:8080/api/sendInvite/${id}`,{friendId:id},{withCredentials:true})\r\n            .then(() => {\r\n                toast.success(`User ${name} added to friend list successfully`, {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    progress: undefined,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                toast.error(error.response.data.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    progress: undefined,\r\n                });\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Card className={'friend-container'} variant=\"outlined\">\r\n            <CardContent className={'card-content'}>\r\n               <Avatar>\r\n                   {avatarId}\r\n               </Avatar>\r\n                <Typography variant=\"p\" component=\"p\" className={'friend-name'}>\r\n                    {name}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            <CardActions className={'card-actions'}>\r\n                {checkbox? (\r\n\r\n                            <Checkbox\r\n                                edge=\"start\"\r\n                                // checked={checked.indexOf(value) !== -1}\r\n                                tabIndex={-1}\r\n                                onChange={handleCheckbox}\r\n                                disableRipple\r\n                            />\r\n\r\n                ) : (\r\n                    <IconButton color={\"primary\"} component={\"span\"} onClick={handleAddFriend} >\r\n                        <AddCircleIcon/>\r\n                    </IconButton>\r\n                )}\r\n\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\nexport default Friend;",{"ruleId":"87","severity":1,"message":"88","line":76,"column":16,"nodeType":"89","messageId":"90","endLine":76,"endColumn":24},{"ruleId":"87","severity":1,"message":"91","line":76,"column":26,"nodeType":"89","messageId":"90","endLine":76,"endColumn":33},{"ruleId":"87","severity":1,"message":"92","line":50,"column":22,"nodeType":"89","messageId":"90","endLine":50,"endColumn":30},{"ruleId":"87","severity":1,"message":"93","line":50,"column":9,"nodeType":"89","messageId":"90","endLine":50,"endColumn":13},{"ruleId":"87","severity":1,"message":"94","line":51,"column":9,"nodeType":"89","messageId":"90","endLine":51,"endColumn":19},{"ruleId":"87","severity":1,"message":"95","line":52,"column":9,"nodeType":"89","messageId":"90","endLine":52,"endColumn":14},{"ruleId":"87","severity":1,"message":"96","line":53,"column":9,"nodeType":"89","messageId":"90","endLine":53,"endColumn":14},{"ruleId":"87","severity":1,"message":"97","line":54,"column":9,"nodeType":"89","messageId":"90","endLine":54,"endColumn":14},{"ruleId":"87","severity":1,"message":"98","line":55,"column":9,"nodeType":"89","messageId":"90","endLine":55,"endColumn":16},{"ruleId":"87","severity":1,"message":"99","line":56,"column":9,"nodeType":"89","messageId":"90","endLine":56,"endColumn":11},{"ruleId":"87","severity":1,"message":"100","line":57,"column":9,"nodeType":"89","messageId":"90","endLine":57,"endColumn":21},{"ruleId":"87","severity":1,"message":"101","line":58,"column":9,"nodeType":"89","messageId":"90","endLine":58,"endColumn":16},{"ruleId":"87","severity":1,"message":"102","line":59,"column":9,"nodeType":"89","messageId":"90","endLine":59,"endColumn":15},{"ruleId":"87","severity":1,"message":"103","line":60,"column":9,"nodeType":"89","messageId":"90","endLine":60,"endColumn":19},{"ruleId":"87","severity":1,"message":"104","line":167,"column":31,"nodeType":"105","messageId":"90","endLine":167,"endColumn":37},{"ruleId":"87","severity":1,"message":"99","line":31,"column":12,"nodeType":"89","messageId":"90","endLine":31,"endColumn":14},{"ruleId":"87","severity":1,"message":"93","line":31,"column":15,"nodeType":"89","messageId":"90","endLine":31,"endColumn":19},{"ruleId":"87","severity":1,"message":"106","line":31,"column":20,"nodeType":"89","messageId":"90","endLine":31,"endColumn":27},{"ruleId":"87","severity":1,"message":"107","line":31,"column":29,"nodeType":"89","messageId":"90","endLine":31,"endColumn":37},{"ruleId":"87","severity":1,"message":"108","line":31,"column":38,"nodeType":"89","messageId":"90","endLine":31,"endColumn":46},{"ruleId":"87","severity":1,"message":"109","line":31,"column":48,"nodeType":"89","messageId":"90","endLine":31,"endColumn":56},"react/prop-types","'severity' is missing in props validation","Property","missingPropType","'message' is missing in props validation","'children' is missing in props validation","'name' is missing in props validation","'expireDate' is missing in props validation","'brand' is missing in props validation","'price' is missing in props validation","'count' is missing in props validation","'address' is missing in props validation","'id' is missing in props validation","'objectUserId' is missing in props validation","'unclaim' is missing in props validation","'status' is missing in props validation","'expireSoon' is missing in props validation","'name.charAt' is missing in props validation","Identifier","'initial' is missing in props validation","'checkbox' is missing in props validation","'sendData' is missing in props validation","'avatarId' is missing in props validation"]